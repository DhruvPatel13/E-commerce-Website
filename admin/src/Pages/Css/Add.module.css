.add {
  min-height: 100vh;
  padding: clamp(1rem, 3vw, 2rem);
}
.content_holder {
  max-width: clamp(300px, 90vw, 800px);
  margin: 0 auto;
  padding: clamp(1rem, 3vw, 2rem);
}
.img_input_container {
  margin-bottom: clamp(1rem, 3vw, 1.5rem);
}
.img_input_container label {
  display: block;
  font-weight: 600;
  margin-bottom: 0.5rem;
  color: var(--greyText);
  font-size: clamp(0.875rem, 2vw, 1rem);
}
.img_input_holder {
  display: grid;
  grid-template-columns: repeat(
    auto-fit,
    minmax(clamp(100px, 15vw, 100px), 1fr)
  );
  gap: clamp(0.5rem, 2vw, 1rem);
}
.img_input_holder label {
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  height: clamp(6rem, 20vw, 8rem);
  overflow: hidden;
}
.img_input_holder img {
  max-width: 100%;
  max-height: 100%;
  object-fit: cover;
}

.name_container,
.desc_container,
.holder,
.price_holder {
  margin-bottom: clamp(1rem, 3vw, 1.5rem);
}
.name_container label,
.desc_container label,
.category_container label,
.subcategory_container label,
.price label,
.offer_price label {
  display: block;
  font-weight: 600;
  margin-bottom: 0.5rem;
  color: var(--greyText);
  font-size: clamp(0.875rem, 2vw, 1rem);
}
.name_container input,
.desc_container textarea,
.category_container select,
.subcategory_container select,
.price input,
.offer_price input {
  outline: none;
  background-color: var(--inputBackground);
  border: 1px solid transparent;
  width: 100%;
  padding: clamp(0.5rem, 1.5vw, 0.75rem);
  border-radius: 0.375rem;
  font-size: clamp(0.875rem, 2vw, 1rem);
  color: var(--shadowGrey);
}
.desc_container textarea {
  min-height: clamp(80px, 20vw, 120px);
  resize: none;
}
.holder {
  display: flex;
  flex-direction: row;
  gap: clamp(0.5rem, 2vw, 1rem);
}
.category_container,
.subcategory_container {
  width: 100%;
}
.price_holder {
  display: flex;
  flex-direction: row;
  gap: clamp(0.5rem, 2vw, 1rem);
}
.price,
.offer_price {
  width: 100%;
}
.product_sizes_holder {
  display: flex;
  flex-wrap: wrap;
  gap: clamp(0.25rem, 1vw, 0.5rem);
  margin-bottom: clamp(1rem, 3vw, 1.5rem);
}
.sizes {
  padding: clamp(0.25rem, 1vw, 0.5rem) clamp(0.5rem, 2vw, 1rem);
  border: 1px solid var(--greyText);
  border-radius: 0.375rem;
  cursor: pointer;
  transition: background-color 0.2s, color 0.2s;
  font-size: clamp(0.75rem, 2vw, 0.875rem);
}
.sizes:hover {
  color: white;
  background: var(--gradientDark);
  border-color: rgba(var(--borderColored), 0.1);
  opacity: 0.7;
}
.sizes.active {
  color: white;
  border-color: rgb(var(--borderColored));
  background: var(--gradientDark);
}
.checkbox_holder {
  display: flex;
  align-items: center;
  margin-bottom: clamp(1rem, 3vw, 1.5rem);
  font-size: clamp(0.875rem, 2vw, 1rem);
}
.checkbox_holder input[type="checkbox"] {
  margin-right: 0.5rem;
}
.content_holder button[type="submit"] {
  background: var(--gradientDark);
  color: white;
  font-weight: 600;
  padding: clamp(0.5rem, 2vw, 0.75rem) clamp(1rem, 3vw, 1.5rem);
  border: none;
  border-radius: 0.375rem;
  cursor: pointer;
  font-size: clamp(0.875rem, 2vw, 1rem);
  width: auto;
  transition: opacity 0.5s ease; 
  opacity: 0.6;
}
.content_holder button[type="submit"]:hover {
  opacity: 1;
  background: var(--gradientDark);
}

@media (max-width: 768px) {
  .add {
    width: 100%;
  }
  .holder,
  .price_holder {
    flex-direction: column;
  }
  .content_holder button[type="submit"] {
    width: 100%;
  }
}


/* spinner */
.spinner_wrapper {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 999;
  background:hsl(0, 0%, 50%, 0.2);
}
.spinner {
  position: relative;
  width: 80px;
  height: 80px;
  display: flex;
  justify-content: center;
  align-items: center;
}
.spinner::before,
.spinner::after {
  content: '';
  position: absolute;
  width: 100%;
  height: 100%;
  border-radius: 50%;
  border: 4px solid transparent;
}
.spinner::before {
  border-top-color: rgb(var(--gradient1));
  border-right-color: rgb(var(--gradient1));
  animation: spin 1.5s linear infinite;
}
.spinner::after {
  border-bottom-color: rgb(var(--gradient2));
  border-left-color: rgb(var(--gradient2));
  animation: spin 1s linear infinite reverse;
}
.spinner div {
  position: absolute;
  width: 60%;
  height: 60%;
  border-radius: 50%;
  border: 4px solid transparent;
  border-top-color: rgb(var(--gradient2));
  border-left-color: rgb(var(--gradient1));
  animation: spin 2s linear infinite;
}
@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

